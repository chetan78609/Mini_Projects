We have created a repository with Git and Cloning the same in local:

Check log: (All events (basically comments during commit))
git log 

Clone - Cloning a repository on our local system
git clone <HTTP Link>

Status - displays the state of Code
git Status

Add - adds new or changed files in working directory to the Git Staging area.
git add <filename>
git add . (Add everything in the staging process)

Commit - it is the record of changes 
git commit -m "Commit message"

When you have already have some code written and want to push it to Git:

init - initialize a new repository
git init 

Connecting the repo of Github with the HTTPS link
git remote add origin <Link>

To push (Push the changes in Github)
git push-u origin <branch name>
git push origin <branch name>

To check status
git remote -v 

To check branch
git branch

To rename 
git branch -M newname

To checkout from a branch
git checkout

To checkout and create a new branch
git checkout -b <new branch name>

To delete a branch
git branch -d <branch name>

Merging code:

to compare commits, branches, files, and more
git diff <branch name>

to merge 2 branches
git merge <branch name>

way 2:
Create a PR (Pull request)
It lets you tell others about changes you've pushed to a branch in a repository on Github
(It is used when multiple developers are working in the same project etc)


Pull request :
When you want the changes in github in Local:

git pull origin <branchname>

Undoing changes:

Stage changes:
Changes that are added but not committed:

git reset <filename>
git reset

committed changes for one commit:
git reset HEAD~1 (Lates commit is stored with the name automatically as HEAD)


Committed changes for many commits

git reset <commit hash> (you can find your hash in git log command result where serial like value appears)
git reset --hard <-commit hash-> (It will remove your changes in vs code and repo) 
(you can find your hash in git log command result where serial like value appears)

Fork in Git:
Copying the project from other repository 


